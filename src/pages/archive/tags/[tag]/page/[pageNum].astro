---
import Sidebar from "../../../../../components/Sidebar.astro";
import MainLayout from "../../../../../layouts/MainLayout.astro";
import PostSummary from "../../../../../components/PostSummary.astro";
import { getContent } from "cross:content";
import Icon from "../../../../../components/Icon.astro";

const tag = await getContent('tags', {
    slug: Astro.params.tag
});

// Define the number of posts per page
const postsPerPage = 10;
const pageNum = parseInt(Astro.params.pageNum) || 1;

// Fetch the initial page of posts
const initialData = await getContent('posts', {
    first: postsPerPage,
    tag: Astro.params.tag
});
let posts = initialData.posts;
let endCursor = initialData.paginate.cursor;
let hasNextPage = initialData.paginate.nextPage;

// If there are more pages, fetch additional posts using the endCursor
if (pageNum > 1) {
    for (let i = 1; i < pageNum; i++) {
        if (hasNextPage) {
            const data = await getContent('posts', {
                first: postsPerPage,
                after: endCursor,
                tag: Astro.params.tag
            });
            posts = data.posts;
            endCursor = data.paginate.cursor;
            hasNextPage = data.paginate.nextPage;
        }
    }
}

export async function getStaticPaths() {
    const tags = await getContent('tags'); // Assuming this fetches all topics
    const postsPerPage = 10; // Set your posts per page
    let paths = [];

    // Loop through each topic
    for (const tag of tags) {
        // Fetch posts for this specific topic
        const { posts } = await getContent('posts', { tag: tag.slug });

        // Calculate the number of pages based on the number of posts
        const totalPages = Math.ceil(posts.length / postsPerPage);

        // Generate paths for each page
        for (let page = 1; page <= totalPages; page++) {
            const path = {
                params: {
                    tag: tag.slug,
                    pageNum: `${page}`, // Only add pageNum if it's greater than 1
                },
            };
            paths.push(path);
        }
    }

    return paths.filter((path) => path.params.pageNum !== '1');
}

Astro.response.headers.set('Cache-Control', 'max-age=600, must-revalidate');
---

<MainLayout title={`${tag?.label} â€“ CROSS`} description={tag?.content.summary}>
    <div class="list__main lm">
        <nav class="breadcrumb" aria-label="breadcrumbs">
            <ol>
                <li>
                    <a href="/">Home</a>
                </li>
                <li>
                    <a href="/archive">Archive</a>
                </li>
                <li>
                    <a href="/archive/tags">Tags</a>
                </li>
                <li class="is-active">
                    <span>{tag?.label}</span>
                </li>
            </ol>
        </nav>
        <div class="summary__container" data-display="block">
            {posts.map((post) => (
                    <PostSummary data={post}></PostSummary>
            ))}
            <hr class="hr-slash nav-hr">
            <nav class="pagination-single">
                {pageNum > 1 && (
                        <a href={pageNum - 1 === 1 ? `/archive/tags/${tag?.slug}` : `/archive/tags/${tag?.slug}/page/${pageNum - 1}`} class="pagination-single__left">
                            <div class="pagination-single__icon">
                                <Icon name={'nav-left'} size={25} />
                            </div>
                            <div class="pagination-single__left-title">Newer Entries</div>
                        </a>
                )}
                <div class="grow"></div>
                {hasNextPage && (
                        <a href={`/archive/tags/${tag?.slug}/page/${pageNum + 1}`} class="pagination-single__right">
                            <div class="pagination-single__right-title">Older Entries</div>
                            <div class="pagination-single__icon">
                                <Icon name={'nav-right'} size={25} />
                            </div>
                        </a>
                )}
            </nav>
        </div>
    </div>
    <Sidebar />
</MainLayout>
