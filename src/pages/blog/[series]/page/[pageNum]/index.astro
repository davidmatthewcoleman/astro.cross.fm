---
import Sidebar from "../../../../../components/Sidebar.astro";
import MainLayout from "../../../../../layouts/MainLayout.astro";
import PostSummary from "../../../../../components/PostSummary.astro";
import { getContent } from "../../../../../lib/content-layer";
import Parse from "html-react-parser";

const series = await getContent('series', {
    slug: Astro.params.series
});

// Define the number of posts per page
const postsPerPage = 10;
const pageNum = parseInt(Astro.params.pageNum) || 1;

// Fetch the initial page of posts
const initialData = await getContent('posts', {
    first: postsPerPage,
    series: Astro.params.series
});
let posts = initialData.posts;
let endCursor = initialData.paginate.cursor;
let hasNextPage = initialData.paginate.nextPage;

// If there are more pages, fetch additional posts using the endCursor
if (pageNum > 1) {
    for (let i = 1; i < pageNum; i++) {
        if (hasNextPage) {
            const data = await getContent('posts', {
                first: postsPerPage,
                after: endCursor,
                series: Astro.params.series
            });
            posts = data.posts;
            endCursor = data.paginate.cursor;
            hasNextPage = data.paginate.nextPage;
        }
    }
}

export async function getStaticPaths() {
    const data = await getContent('series');
    const defaultPages = Math.ceil( data.length / 10 );

    let paths = [];

    data.forEach(series => {
        for (let i = 0; i < defaultPages; i++) {
            paths.push({
                params: { series: series.slug, pageNum: `${i + 1}` }
                });
            }
        });

    return paths.filter((path) => path.params.pageNum !== '1');
}

Astro.response.headers.set('Cache-Control', 'max-age=600, must-revalidate');
---

<MainLayout title={`${series?.label} â€“ CROSS`} description={series?.description}>
    <div class="list__main lm">
        <nav class="breadcrumb" aria-label="breadcrumbs">
            <ol>
                <li>
                    <a href="/public">Home</a>
                </li>
                <li>
                    <a href="/blog">Blog</a>
                </li>
                <li class="is-active">
                    <span>{series?.label}</span>
                </li>
            </ol>
        </nav>
        <h5 class="list__header--title capitalize h5">{Parse(series.label)}</h5>
        {
            series.content.summary && (
                <>
                    <div class="list__header--desc p2">
                        {Parse(series.content.summary)}
                    </div>
                </>
            )
        }
        <div class="summary__container" data-display="block">
            {posts.map((post) => (
                <PostSummary data={post}></PostSummary>
            ))}
            <hr class="hr-slash nav-hr">
            <nav class="pagination-single">
                {pageNum > 1 && (
                    <a href={pageNum - 1 === 1 ? `/blog/${series?.slug}` : `/blog/${series?.slug}/page/${pageNum - 1}`} class="pagination-single__left">
                        <div class="pagination-single__icon">
                            <svg class="icon" width="25" height="25" role="img">
                                <use href="#icon-nav-left"></use>
                            </svg>
                        </div>
                        <div class="pagination-single__left-title">Newer Entries</div>
                    </a>
                )}
                <div class="grow"></div>
                {hasNextPage && (
                    <a href={`/blog/${series?.slug}/page/${pageNum + 1}`} class="pagination-single__right">
                        <div class="pagination-single__right-title">Older Entries</div>
                        <div class="pagination-single__icon">
                            <svg class="icon" width="25" height="25" role="img">
                                <use href="#icon-nav-right"></use>
                            </svg>
                        </div>
                    </a>
                )}
            </nav>
        </div>
    </div>
    <Sidebar />
</MainLayout>
