---
import Picture from './Picture.astro'
const { menu } = Astro.props;
---

<nav class="navbar scrolling navbar--show" role="navigation" aria-label="main navigation" data-dir="ltr">
    <div class={`navbar__brand`}>
        <a href="/" title="Home" rel="home" class="navbar__title-link">
            <Picture
                alt="CROSS"
                source={[
                    {
                        url: "https://assets.cross-cdn.com/assets/images/8BIT_logo.png",
                        params: {
                            resize: ['auto', 24],
                            quality: 100
                        }
                    }
                ]}
                dpr={1}
                className="navbar__logo"
            />
        </a>
        <style>
            .navbar__logo {
                image-rendering: pixelated;
                display: block;
            }
        </style>
    </div>
    <a id="menuToggle" role="button" class="navbar__burger" aria-label="menu" aria-expanded="false">
        <Picture
            alt="toggle menu"
            source={[
                {
                    url: "https://assets.cross-cdn.com/assets/images/menu.png",
                    params: {
                        resize: ['auto', 24],
                        quality: 100
                    }
                }
            ]}
            dpr={1}
            className="navbar__menu-icon closed"
        />
        <Picture
            alt="toggle menu"
            source={[
                {
                    url: "https://assets.cross-cdn.com/assets/images/menu_open.png",
                    params: {
                        resize: ['auto', 24],
                        quality: 100
                    }
                }
            ]}
            dpr={1}
            className="navbar__menu-icon open"
        />
    </a>
    <div class="navbar__menu">
        {menu.map(menuItem => {
            return <a href={menuItem.path || '/'} class={`navbar__menu-item navbar__slide-down${Astro.url.pathname.startsWith(menuItem.uri) && menuItem.uri !== '/' ? ' active' : ''}`} dir="ltr">{menuItem.label}</a>;
        })}
    </div>
</nav>

<script client:load is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const menuToggle = document.getElementById('menuToggle');
        const body = document.body;

        if (menuToggle) {
            menuToggle.addEventListener('click', function () {
                body.classList.toggle('menuOpen');
                this.classList.toggle('active');
            });
        }
    });
</script>
