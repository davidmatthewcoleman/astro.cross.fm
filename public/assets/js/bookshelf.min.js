class BookshelfBlock extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){let e=localStorage.getItem("viewMode")||"list",t=this.shadowRoot,o=document.createElement("div");o.id="next-app",t.appendChild(o);try{let l=await fetch("https://next-app.cross.fm/bookshelf/"+e),i=await l.text(),c=new DOMParser,n=c.parseFromString(i,"text/html"),s=n.querySelector("#bookshelf").innerHTML,r=await fetch("https://next-app.cross.fm/styles.css"),a=await r.text(),h=document.createElement("style");h.textContent=a,t.appendChild(h),o.innerHTML=s}catch(d){console.error("Error fetching HTML or CSS:",d)}}}customElements.define("bookshelf-block",BookshelfBlock);const toggleButton=document.getElementById("toggleButton"),bookshelfBlock=document.querySelector("bookshelf-block"),cache={};async function fetchAndCacheHTML(e){let t=`https://next-app.cross.fm/bookshelf/${e}`;try{let o=await fetch(t);htmlText=await o.text();let l=new DOMParser,i=l.parseFromString(htmlText,"text/html"),c=i.querySelector("#bookshelf").innerHTML;cache[e]=c}catch(n){console.error(`Error fetching HTML for ${e} view:`,n)}}const initialViewMode=localStorage.getItem("viewMode")||"list";function toggleViewMode(){let e=bookshelfBlock.getAttribute("view-mode"),t="list"===e?"grid":"list";bookshelfBlock.setAttribute("view-mode",t),localStorage.setItem("viewMode",t),bookshelfBlock.shadowRoot.querySelector("#next-app").innerHTML=cache[t]}Promise.all(["list","grid"].map(fetchAndCacheHTML)).then(()=>{bookshelfBlock.setAttribute("view-mode",initialViewMode),bookshelfBlock.shadowRoot.querySelector("#next-app").innerHTML=cache[initialViewMode],toggleButton.addEventListener("click",toggleViewMode)});